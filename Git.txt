Three stages of file: committed, modified, and staged.



commands:

pwd	: returns the current working directory

cd	: to change the working directory. (cd~ to go to home)

dir	: list files in directory

copy con	: create a new empty file

mkdir	: to create a new empty folder

git config	: allows you to set configuration like username and email address
		
	git config --global user.name "Shiva Prasad"
	git config --global user.email "shivaprasadcapgemini@gmail.com"
Note: if you want to use different user n email for a particular project, then use the same commands without "--global". But with global it will uplaod project to only that user everytime and no need to use these commands ever again.


git config --list	: to check config list, it will list all the settings git has at that point
git config user.name	: to check only username (u can use for other config too)

man git		: git manual

git help config		: will take you to config commands in git manual

git help	: returns most commonly used git commands

git init	: to initialize git repository

git add .	: add files to staging area so that we can git it

git commit -m "message"		: commit a file to local project/git repo

git remote add origin <http urll>	: used to link local repository to git repository so that u can push and pull changes between the two

git push -u  origin master	: to push
Note: it will prompt u to enter username and password

git status	: shows whether the branch is upto date or not, i.e local rep == origin rep

cd .> fileName.txt	: to add new file to the repo

git add fileName	: used to track the file for commit

Notepad filename	: to open file in notepad (open -a <text editor> filename: used to open a file)

code filename	: to open file in vs code

git status -s	: to show small status
git status --short	: to show small status
git diff	: committed and staged changes
git diff --staged	: compares staged changes to last commit snapshot
git diff --staged --no-renames	:same as above but better

git commit -a -m <message>	: skips git add command

git push origin master	: to push to origin(github web)

git log		: to see previous commits in reverse chronological order
git log -1	: it shows only the last 1 log i.e. the latest commit
git log --oneline	: gets all the commits in a single line format
git log --stat		: more details in the log
git log --patch		: most details in the log like git diff


git rm filename		: remove file from staged for deletion
git rm --cached filename	: stop tracking but doesn't remove/delete from the directory

git stash	: temporarily shelves (or stashes) changes you've made to your working copy so you can work on something else, and then come back and re-apply them later on.
git stash  list		: provides list of work in progress
git stash show		: high level desc of stash lsit
git stash pop		: change will be brought back to the working directory


git mv oldName newName		: to rename a file name

git checkout -b branchName	: create a new branch
git checkout master	: to go back to master branch
git branch branchName	: will create branch without commit/checkout
git branch	: lists all the branches in the directory

git merge branch_name	:to merge the branch to the checkout branch(i.e. 'branch_name' branch will be merged to the branch in which the checkout is rn)


create a new repository on the command line

echo "# Demo" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/shivaprasadcap/Demo.git
git push -u origin main


push an existing repository from the command line

git remote add origin https://github.com/shivaprasadcap/Demo.git
git branch -M main
git push -u origin main






